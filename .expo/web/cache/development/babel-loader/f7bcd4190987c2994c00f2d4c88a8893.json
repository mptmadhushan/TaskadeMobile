{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SplashScreen = function SplashScreen() {\n  var navigation = useNavigation();\n  useEffect(function () {\n    var checkUser = function () {\n      var _ref = _asyncToGenerator(function* () {\n        if (yield isAuthenticated()) {\n          navigation.navigate('ToDoScreen');\n        } else {\n          navigation.navigate('SignIn');\n        }\n      });\n      return function checkUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkUser();\n  }, []);\n  var isAuthenticated = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('token');\n      return !!token;\n    });\n    return function isAuthenticated() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsx(ActivityIndicator, {})\n  });\n};\nexport default SplashScreen;","map":{"version":3,"names":["React","useEffect","useNavigation","AsyncStorage","SplashScreen","navigation","checkUser","isAuthenticated","navigate","token","getItem","flex","justifyContent"],"sources":["/Users/Tharindu/Downloads/myProjects/full-stack/teamTaskApp/TaskadeMobile/screens/SplashScreen.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { View, Text, ActivityIndicator } from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst SplashScreen = () => {\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const checkUser = async () => {\n      if (await isAuthenticated()) {\n        navigation.navigate('ToDoScreen');\n      } else {\n        navigation.navigate('SignIn');\n      }\n    }\n\n    checkUser();\n  }, []);\n\n  const isAuthenticated = async () => {\n    // await AsyncStorage.removeItem('token');\n    const token = await AsyncStorage.getItem('token');\n    return !!token;\n  }\n\n  return (\n    <View style={{flex: 1, justifyContent: 'center'}}>\n      <ActivityIndicator />\n    </View>\n  )\n}\n\nexport default SplashScreen\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA;AAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,uCAAuC;AAAC;AAEjE,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;EACzB,IAAMC,UAAU,GAAGH,aAAa,EAAE;EAElCD,SAAS,CAAC,YAAM;IACd,IAAMK,SAAS;MAAA,6BAAG,aAAY;QAC5B,UAAUC,eAAe,EAAE,EAAE;UAC3BF,UAAU,CAACG,QAAQ,CAAC,YAAY,CAAC;QACnC,CAAC,MAAM;UACLH,UAAU,CAACG,QAAQ,CAAC,QAAQ,CAAC;QAC/B;MACF,CAAC;MAAA,gBANKF,SAAS;QAAA;MAAA;IAAA,GAMd;IAEDA,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,eAAe;IAAA,8BAAG,aAAY;MAElC,IAAME,KAAK,SAASN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;MACjD,OAAO,CAAC,CAACD,KAAK;IAChB,CAAC;IAAA,gBAJKF,eAAe;MAAA;IAAA;EAAA,GAIpB;EAED,OACE,KAAC,IAAI;IAAC,KAAK,EAAE;MAACI,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE;IAAQ,CAAE;IAAA,UAC/C,KAAC,iBAAiB;EAAG,EAChB;AAEX,CAAC;AAED,eAAeR,YAAY"},"metadata":{},"sourceType":"module"}