{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2;\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { useRoute } from '@react-navigation/native';\nimport ToDoItem from \"../components/ToDoItem\";\nimport { View } from \"../components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_PROJECT = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\nquery getTaslist($id:ID!) {\\n  getTaskList(id:$id) {\\n    id\\n    title\\n    createdAt\\n    todos {\\n      id\\n      content\\n      isCompleted\\n    }\\n  }\\n}\\n\"])));\nvar CREATE_TODO = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\nmutation createToDo($content:String!, $taskListId: ID!) {\\n  createToDo(content: $content, taskListId: $taskListId) {\\n    id\\n\\t\\tcontent\\n    isCompleted\\n    \\n    taskList {\\n      id\\n      progress\\n      todos {\\n        id\\n        content\\n        isCompleted\\n      }\\n    }\\n  }\\n}\\n\"])));\nvar id = '4';\nexport default function ToDoScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    project = _useState2[0],\n    setProject = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    title = _useState4[0],\n    setTitle = _useState4[1];\n  var route = useRoute();\n  var id = route.params.id;\n  var _useQuery = useQuery(GET_PROJECT, {\n      variables: {\n        id: id\n      }\n    }),\n    data = _useQuery.data,\n    error = _useQuery.error,\n    loading = _useQuery.loading;\n  var _useMutation = useMutation(CREATE_TODO, {\n      refetchQueries: GET_PROJECT\n    }),\n    _useMutation2 = _slicedToArray(_useMutation, 2),\n    createTodo = _useMutation2[0],\n    _useMutation2$ = _useMutation2[1],\n    createTodoData = _useMutation2$.data,\n    createTodoError = _useMutation2$.error;\n  useEffect(function () {\n    if (error) {\n      console.log(error);\n      Alert.alert('Error fetching project', error.message);\n    }\n  }, [error]);\n  useEffect(function () {\n    if (data) {\n      setProject(data.getTaskList);\n      setTitle(data.getTaskList.title);\n    }\n  }, [data]);\n  var createNewItem = function createNewItem(atIndex) {\n    createTodo({\n      variables: {\n        content: '',\n        taskListId: id\n      }\n    });\n  };\n  if (!project) {\n    return null;\n  }\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: Platform.OS === \"ios\" ? 130 : 0,\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        value: title,\n        onChangeText: setTitle,\n        placeholder: 'Title',\n        style: styles.title\n      }), _jsx(FlatList, {\n        data: project.todos,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n            index = _ref.index;\n          return _jsx(ToDoItem, {\n            todo: item,\n            onSubmit: function onSubmit() {\n              return createNewItem(index + 1);\n            }\n          });\n        },\n        style: {\n          width: '100%'\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 12\n  },\n  title: {\n    width: '100%',\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold',\n    marginBottom: 12\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useQuery","useMutation","gql","useRoute","ToDoItem","View","GET_PROJECT","CREATE_TODO","id","ToDoScreen","project","setProject","title","setTitle","route","params","variables","data","error","loading","refetchQueries","createTodo","createTodoData","createTodoError","console","log","Alert","alert","message","getTaskList","createNewItem","atIndex","content","taskListId","Platform","OS","flex","styles","container","todos","item","index","width","StyleSheet","create","alignItems","padding","fontSize","color","fontWeight","marginBottom"],"sources":["/Users/Tharindu/Downloads/myProjects/full-stack/teamTaskApp/TaskadeMobile/screens/ToDoScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  StyleSheet,\n   FlatList, \n   TextInput, \n   KeyboardAvoidingView,\n   Platform,\n   Alert\n} from 'react-native';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { useRoute } from '@react-navigation/native';\n\nimport ToDoItem from '../components/ToDoItem';\n\nimport { Text, View } from '../components/Themed';\n\nconst GET_PROJECT = gql`\nquery getTaslist($id:ID!) {\n  getTaskList(id:$id) {\n    id\n    title\n    createdAt\n    todos {\n      id\n      content\n      isCompleted\n    }\n  }\n}\n`\n\nconst CREATE_TODO = gql`\nmutation createToDo($content:String!, $taskListId: ID!) {\n  createToDo(content: $content, taskListId: $taskListId) {\n    id\n\t\tcontent\n    isCompleted\n    \n    taskList {\n      id\n      progress\n      todos {\n        id\n        content\n        isCompleted\n      }\n    }\n  }\n}\n`\n\nlet id = '4'\n\nexport default function ToDoScreen() {\n\n  const [project, setProject] = useState(null);\n  const [title, setTitle] = useState('');\n\n  const route = useRoute();\n  const id = route.params.id;\n\n  const {\n    data, error, loading\n  } = useQuery(GET_PROJECT, { variables: { id }})\n\n  const [\n    createTodo, { data: createTodoData, error: createTodoError }\n  ] = useMutation(CREATE_TODO, { refetchQueries: GET_PROJECT });\n\n  useEffect(() => {\n    if (error) {\n      console.log(error);\n      Alert.alert('Error fetching project', error.message);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (data) {\n      setProject(data.getTaskList);\n      setTitle(data.getTaskList.title);\n    }\n  }, [data]);\n\n  const createNewItem = (atIndex: number) => {\n    createTodo({\n      variables: {\n        content: '',\n        taskListId: id,\n      }\n    })\n    // const newTodos = [...todos];\n    // newTodos.splice(atIndex, 0, {\n    //   id: id,\n    //   content: '',\n    //   isCompleted: false\n    // })\n    // setTodos(newTodos);\n  }\n\n  if (!project) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView       \n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      keyboardVerticalOffset={Platform.OS === \"ios\" ? 130 : 0}\n      style={{ flex: 1 }}\n    >\n      <View style={styles.container}>\n        <TextInput\n          value={title}\n          onChangeText={setTitle}\n          placeholder={'Title'}\n          style={styles.title} \n        />\n\n        <FlatList\n          data={project.todos}\n          renderItem={({ item, index }) => (\n            <ToDoItem \n              todo={item}\n              onSubmit={() => createNewItem(index + 1)} \n            />\n          )}\n          style={{ width: '100%' }}\n        />\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 12,\n  },\n  title: {\n    width: '100%',\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}